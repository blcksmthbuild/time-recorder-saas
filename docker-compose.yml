version: "3.8"

services:
  # ----------------------------------------------------
  # 1. CORE SHELL (Host Frontend)
  # ----------------------------------------------------
  core-shell:
    environment:
      VITE_TIMELOG_ENTRY: http://localhost:8082/dist/assets/remoteEntry.js
      VITE_AI_AGENT_ENTRY: http://localhost:8083/dist/assets/remoteEntry.js
    build:
      context: ./frontend-core
      dockerfile: Dockerfile
      args:
        VITE_FASTIFY_API_URL: http://localhost:3000/api/v1
    container_name: core-shell
    ports:
      - "80:80" # access to the Core Shell at http://localhost:80
    depends_on:
      - fastify-backend
      - timelog-plugin
      - ai-agent-plugin

  # ----------------------------------------------------
  # 2. TIMELOG PLUGIN (Remote Frontend / Micro Frontend)
  # ----------------------------------------------------
  timelog-plugin:
    build:
      context: ./timelog-plugin
      dockerfile: Dockerfile
    container_name: timelog-plugin
    expose:
      - "80"
    ports:
      - "8082:80"

  # ----------------------------------------------------
  # 3. FASTIFY BACKEND (TimeLog/Auth API)
  # ----------------------------------------------------
  fastify-backend:
    build:
      context: ./time-log-backend
      dockerfile: Dockerfile
    container_name: fastify-backend
    ports:
      - "3000:3000" # access to the Fastify API at http://localhost:3000
    environment:
      AI_AGENT_HOST: ai-agent-service
      DATABASE_URL: postgresql://user:password@db:5432/timelogdb
      NODE_ENV: production
      JWT_SECRET: "eyJhbGciOiJIUzM4NCIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.owv7q9nVbW5tqUezF_G2nHTra-ANW3HqW9epyVwh08Y-Z-FKsnG8eBIpC4GTfTVU"
    command: sh -c "npx prisma migrate deploy && npm start"
    depends_on:
      - db

  # ----------------------------------------------------
  # 4. POSTGRESQL DATABASE
  # ----------------------------------------------------
  db:
    image: postgres:16-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: timelogdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # ----------------------------------------------------
  # 5. AI-AGENT SERVICE (Python Logic)
  # ----------------------------------------------------
  ai-agent-service:
    build:
      context: ./ai-agent-service
      dockerfile: Dockerfile
    container_name: ai-agent-service
    expose:
      - "4000"
    environment:
      PORT: 4000
      GEMINI_API_KEY: AIzaSyDbqM6TC0Gf_I22bycIk1xJKGPFWKa0cWQ
      MONDAY_API_KEY: eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjU2OTQ1NDE3MSwiYWFpIjoxMSwidWlkIjo5MDAzNzY2OCwiaWFkIjoiMjAyNS0xMC0wMlQxNjo0MTozMC43MzJaIiwicGVyIjoibWU6d3JpdGUiLCJhY3RpZCI6MzE3MzkzNDgsInJnbiI6ImV1YzEifQ.Fm2TizWJuMjuuHesaC8FoK-e3MJUp0UvkIvZrNW7Dso
      MONDAY_PROJECT_BOARD_ID: 5024970082
      FASTIFY_API_URL: http://fastify-backend:3000/api/v1
    depends_on:
      - fastify-backend
      - db

  # ----------------------------------------------------
  # 6. AI-AGENT PLUGIN (Remote Frontend / Micro Frontend)
  # ----------------------------------------------------
  ai-agent-plugin:
    build:
      context: ./ai-agent-plugin
      dockerfile: Dockerfile
    container_name: ai-agent-plugin
    expose:
      - "80"
    ports:
      - "8083:80"

volumes:
  postgres_data:
